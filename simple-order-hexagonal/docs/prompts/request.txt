Spring Boot 3와 kotlin을 사용해서 Clean/Hexagonal Architecture 기반의
간단한 "주문(Order) 관리 프로그램"을 만들어줘.  gradle을 jdk는 17이상으로 해줘

요구사항:

1. 도메인
  - Order(주문), OrderLine(주문항목) 엔티티
  - 주문은 여러 개의 OrderLine을 가진다.
  - 총액(totalAmount)과 생성일(createdAt)을 계산한다.

2. 유스케이스(Application)
  - PlaceOrderUseCase: 고객이 상품을 주문한다.
  - GetOrderQuery: 주문을 ID로 조회한다.
  - 유스케이스 구현은 @Transactional 처리.



3. Ports
  - in-port: PlaceOrderUseCase, GetOrderQuery
  - out-port: OrderRepositoryPort (DB 저장/조회 추상화)



4. Adapters
  - in/web: REST Controller (POST /orders, GET /orders/{id})
  - out/jpa: Spring Data JPA를 사용해 Order를 DB에 저장/조회
  - MapStruct를 이용해 도메인 ↔ JPA 엔티티, 도메인 ↔ DTO 변환



5. Config
  - 스프링 부트 실행 가능하도록 @SpringBootApplication 클래스와 AppConfig 제공
  - Maven 의존성: spring-boot-starter-web, spring-boot-starter-data-jpa, mapstruct, lombok



추가 조건:
- 도메인은 프레임워크에 의존하지 않고 순수 Java 코드로 작성.
- application/port에는 인터페이스만, 구현은 service에 둔다.
- adapters/in, adapters/out 패키지로 분리해서 Controller와 JPA Adapter 구현.
- 전체 패키지 구조를 tree 형태로 보여주고, 각 계층별 코드 샘플 포함.